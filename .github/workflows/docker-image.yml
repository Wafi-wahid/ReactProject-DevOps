name: CI/CD - Build, Push, Deploy to EC2

on:
  push:
    branches: [main]
  pull_request:
    types: [closed]

env:
  IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/my-devops-app

jobs:
  build-push-deploy:
    if: >
      github.event_name == 'push'
      || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image (from my-devops-app/Dockerfile)
        run: |
          docker build -f my-devops-app/Dockerfile \
            -t $IMAGE:latest \
            -t $IMAGE:${{ github.sha }} \
            my-devops-app

      - name: Push images to Docker Hub
        run: |
          docker push $IMAGE:${{ github.sha }}
          docker push $IMAGE:latest

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_SSH_PORT || '22' }}
          script: |
            set -e
            echo "Logging into Docker Hub on EC2..."
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            echo "Stopping old container (if any)..."
            docker rm -f my-devops-app || true
            echo "Pulling image..."
            docker pull ${{ env.IMAGE }}:latest
            echo "Starting container..."
            docker run -d --name my-devops-app --restart unless-stopped -p 80:80 ${{ env.IMAGE }}:latest
            sleep 2
            echo "Deployment complete. Running containers:"
            docker ps --filter "name=my-devops-app"
